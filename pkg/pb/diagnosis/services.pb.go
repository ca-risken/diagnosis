// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package diagnosis

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Diagnosis Service
type ListDiagnosisRequest struct {
	ProjectId            []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDiagnosisRequest) Reset()         { *m = ListDiagnosisRequest{} }
func (m *ListDiagnosisRequest) String() string { return proto.CompactTextString(m) }
func (*ListDiagnosisRequest) ProtoMessage()    {}
func (*ListDiagnosisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{0}
}

func (m *ListDiagnosisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiagnosisRequest.Unmarshal(m, b)
}
func (m *ListDiagnosisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiagnosisRequest.Marshal(b, m, deterministic)
}
func (m *ListDiagnosisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiagnosisRequest.Merge(m, src)
}
func (m *ListDiagnosisRequest) XXX_Size() int {
	return xxx_messageInfo_ListDiagnosisRequest.Size(m)
}
func (m *ListDiagnosisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiagnosisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiagnosisRequest proto.InternalMessageInfo

func (m *ListDiagnosisRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *ListDiagnosisRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListDiagnosisResponse struct {
	Diagnosis            []*Diagnosis `protobuf:"bytes,1,rep,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListDiagnosisResponse) Reset()         { *m = ListDiagnosisResponse{} }
func (m *ListDiagnosisResponse) String() string { return proto.CompactTextString(m) }
func (*ListDiagnosisResponse) ProtoMessage()    {}
func (*ListDiagnosisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{1}
}

func (m *ListDiagnosisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiagnosisResponse.Unmarshal(m, b)
}
func (m *ListDiagnosisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiagnosisResponse.Marshal(b, m, deterministic)
}
func (m *ListDiagnosisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiagnosisResponse.Merge(m, src)
}
func (m *ListDiagnosisResponse) XXX_Size() int {
	return xxx_messageInfo_ListDiagnosisResponse.Size(m)
}
func (m *ListDiagnosisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiagnosisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiagnosisResponse proto.InternalMessageInfo

func (m *ListDiagnosisResponse) GetDiagnosis() []*Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

type GetDiagnosisRequest struct {
	ProjectId            []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DiagnosisId          uint32   `protobuf:"varint,2,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiagnosisRequest) Reset()         { *m = GetDiagnosisRequest{} }
func (m *GetDiagnosisRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiagnosisRequest) ProtoMessage()    {}
func (*GetDiagnosisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{2}
}

func (m *GetDiagnosisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiagnosisRequest.Unmarshal(m, b)
}
func (m *GetDiagnosisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiagnosisRequest.Marshal(b, m, deterministic)
}
func (m *GetDiagnosisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiagnosisRequest.Merge(m, src)
}
func (m *GetDiagnosisRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiagnosisRequest.Size(m)
}
func (m *GetDiagnosisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiagnosisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiagnosisRequest proto.InternalMessageInfo

func (m *GetDiagnosisRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *GetDiagnosisRequest) GetDiagnosisId() uint32 {
	if m != nil {
		return m.DiagnosisId
	}
	return 0
}

type GetDiagnosisResponse struct {
	Diagnosis            *Diagnosis `protobuf:"bytes,1,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetDiagnosisResponse) Reset()         { *m = GetDiagnosisResponse{} }
func (m *GetDiagnosisResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiagnosisResponse) ProtoMessage()    {}
func (*GetDiagnosisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{3}
}

func (m *GetDiagnosisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiagnosisResponse.Unmarshal(m, b)
}
func (m *GetDiagnosisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiagnosisResponse.Marshal(b, m, deterministic)
}
func (m *GetDiagnosisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiagnosisResponse.Merge(m, src)
}
func (m *GetDiagnosisResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiagnosisResponse.Size(m)
}
func (m *GetDiagnosisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiagnosisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiagnosisResponse proto.InternalMessageInfo

func (m *GetDiagnosisResponse) GetDiagnosis() *Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

type PutDiagnosisRequest struct {
	ProjectId            uint32              `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Diagnosis            *DiagnosisForUpsert `protobuf:"bytes,2,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PutDiagnosisRequest) Reset()         { *m = PutDiagnosisRequest{} }
func (m *PutDiagnosisRequest) String() string { return proto.CompactTextString(m) }
func (*PutDiagnosisRequest) ProtoMessage()    {}
func (*PutDiagnosisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{4}
}

func (m *PutDiagnosisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutDiagnosisRequest.Unmarshal(m, b)
}
func (m *PutDiagnosisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutDiagnosisRequest.Marshal(b, m, deterministic)
}
func (m *PutDiagnosisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDiagnosisRequest.Merge(m, src)
}
func (m *PutDiagnosisRequest) XXX_Size() int {
	return xxx_messageInfo_PutDiagnosisRequest.Size(m)
}
func (m *PutDiagnosisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDiagnosisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutDiagnosisRequest proto.InternalMessageInfo

func (m *PutDiagnosisRequest) GetProjectId() uint32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *PutDiagnosisRequest) GetDiagnosis() *DiagnosisForUpsert {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

type PutDiagnosisResponse struct {
	Diagnosis            *Diagnosis `protobuf:"bytes,1,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PutDiagnosisResponse) Reset()         { *m = PutDiagnosisResponse{} }
func (m *PutDiagnosisResponse) String() string { return proto.CompactTextString(m) }
func (*PutDiagnosisResponse) ProtoMessage()    {}
func (*PutDiagnosisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{5}
}

func (m *PutDiagnosisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutDiagnosisResponse.Unmarshal(m, b)
}
func (m *PutDiagnosisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutDiagnosisResponse.Marshal(b, m, deterministic)
}
func (m *PutDiagnosisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDiagnosisResponse.Merge(m, src)
}
func (m *PutDiagnosisResponse) XXX_Size() int {
	return xxx_messageInfo_PutDiagnosisResponse.Size(m)
}
func (m *PutDiagnosisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDiagnosisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutDiagnosisResponse proto.InternalMessageInfo

func (m *PutDiagnosisResponse) GetDiagnosis() *Diagnosis {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

type DeleteDiagnosisRequest struct {
	ProjectId            []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DiagnosisId          uint32   `protobuf:"varint,2,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDiagnosisRequest) Reset()         { *m = DeleteDiagnosisRequest{} }
func (m *DeleteDiagnosisRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDiagnosisRequest) ProtoMessage()    {}
func (*DeleteDiagnosisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{6}
}

func (m *DeleteDiagnosisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDiagnosisRequest.Unmarshal(m, b)
}
func (m *DeleteDiagnosisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDiagnosisRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDiagnosisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDiagnosisRequest.Merge(m, src)
}
func (m *DeleteDiagnosisRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDiagnosisRequest.Size(m)
}
func (m *DeleteDiagnosisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDiagnosisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDiagnosisRequest proto.InternalMessageInfo

func (m *DeleteDiagnosisRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *DeleteDiagnosisRequest) GetDiagnosisId() uint32 {
	if m != nil {
		return m.DiagnosisId
	}
	return 0
}

// DiagnosisDataSourceService
type ListDiagnosisDataSourceRequest struct {
	ProjectId            []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDiagnosisDataSourceRequest) Reset()         { *m = ListDiagnosisDataSourceRequest{} }
func (m *ListDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*ListDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*ListDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{7}
}

func (m *ListDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *ListDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *ListDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *ListDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_ListDiagnosisDataSourceRequest.Size(m)
}
func (m *ListDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *ListDiagnosisDataSourceRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *ListDiagnosisDataSourceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListDiagnosisDataSourceResponse struct {
	DiagnosisDataSource  []*DiagnosisDataSource `protobuf:"bytes,1,rep,name=diagnosis_data_source,json=diagnosisDataSource,proto3" json:"diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListDiagnosisDataSourceResponse) Reset()         { *m = ListDiagnosisDataSourceResponse{} }
func (m *ListDiagnosisDataSourceResponse) String() string { return proto.CompactTextString(m) }
func (*ListDiagnosisDataSourceResponse) ProtoMessage()    {}
func (*ListDiagnosisDataSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{8}
}

func (m *ListDiagnosisDataSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDiagnosisDataSourceResponse.Unmarshal(m, b)
}
func (m *ListDiagnosisDataSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDiagnosisDataSourceResponse.Marshal(b, m, deterministic)
}
func (m *ListDiagnosisDataSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDiagnosisDataSourceResponse.Merge(m, src)
}
func (m *ListDiagnosisDataSourceResponse) XXX_Size() int {
	return xxx_messageInfo_ListDiagnosisDataSourceResponse.Size(m)
}
func (m *ListDiagnosisDataSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDiagnosisDataSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDiagnosisDataSourceResponse proto.InternalMessageInfo

func (m *ListDiagnosisDataSourceResponse) GetDiagnosisDataSource() []*DiagnosisDataSource {
	if m != nil {
		return m.DiagnosisDataSource
	}
	return nil
}

type GetDiagnosisDataSourceRequest struct {
	ProjectId             uint32   `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DiagnosisDataSourceId uint32   `protobuf:"varint,2,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *GetDiagnosisDataSourceRequest) Reset()         { *m = GetDiagnosisDataSourceRequest{} }
func (m *GetDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*GetDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{9}
}

func (m *GetDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *GetDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *GetDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *GetDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiagnosisDataSourceRequest.Size(m)
}
func (m *GetDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *GetDiagnosisDataSourceRequest) GetProjectId() uint32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *GetDiagnosisDataSourceRequest) GetDiagnosisDataSourceId() uint32 {
	if m != nil {
		return m.DiagnosisDataSourceId
	}
	return 0
}

type GetDiagnosisDataSourceResponse struct {
	DiagnosisDataSource  *DiagnosisDataSource `protobuf:"bytes,1,opt,name=diagnosis_data_source,json=diagnosisDataSource,proto3" json:"diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDiagnosisDataSourceResponse) Reset()         { *m = GetDiagnosisDataSourceResponse{} }
func (m *GetDiagnosisDataSourceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiagnosisDataSourceResponse) ProtoMessage()    {}
func (*GetDiagnosisDataSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{10}
}

func (m *GetDiagnosisDataSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiagnosisDataSourceResponse.Unmarshal(m, b)
}
func (m *GetDiagnosisDataSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiagnosisDataSourceResponse.Marshal(b, m, deterministic)
}
func (m *GetDiagnosisDataSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiagnosisDataSourceResponse.Merge(m, src)
}
func (m *GetDiagnosisDataSourceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiagnosisDataSourceResponse.Size(m)
}
func (m *GetDiagnosisDataSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiagnosisDataSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiagnosisDataSourceResponse proto.InternalMessageInfo

func (m *GetDiagnosisDataSourceResponse) GetDiagnosisDataSource() *DiagnosisDataSource {
	if m != nil {
		return m.DiagnosisDataSource
	}
	return nil
}

type PutDiagnosisDataSourceRequest struct {
	ProjectId            uint32                        `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DiagnosisDataSource  *DiagnosisDataSourceForUpsert `protobuf:"bytes,2,opt,name=diagnosis_data_source,json=diagnosisDataSource,proto3" json:"diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PutDiagnosisDataSourceRequest) Reset()         { *m = PutDiagnosisDataSourceRequest{} }
func (m *PutDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*PutDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*PutDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{11}
}

func (m *PutDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *PutDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *PutDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *PutDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_PutDiagnosisDataSourceRequest.Size(m)
}
func (m *PutDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *PutDiagnosisDataSourceRequest) GetProjectId() uint32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *PutDiagnosisDataSourceRequest) GetDiagnosisDataSource() *DiagnosisDataSourceForUpsert {
	if m != nil {
		return m.DiagnosisDataSource
	}
	return nil
}

type PutDiagnosisDataSourceResponse struct {
	ProjectId            []uint32             `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DiagnosisDataSource  *DiagnosisDataSource `protobuf:"bytes,2,opt,name=diagnosis_data_source,json=diagnosisDataSource,proto3" json:"diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PutDiagnosisDataSourceResponse) Reset()         { *m = PutDiagnosisDataSourceResponse{} }
func (m *PutDiagnosisDataSourceResponse) String() string { return proto.CompactTextString(m) }
func (*PutDiagnosisDataSourceResponse) ProtoMessage()    {}
func (*PutDiagnosisDataSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{12}
}

func (m *PutDiagnosisDataSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutDiagnosisDataSourceResponse.Unmarshal(m, b)
}
func (m *PutDiagnosisDataSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutDiagnosisDataSourceResponse.Marshal(b, m, deterministic)
}
func (m *PutDiagnosisDataSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDiagnosisDataSourceResponse.Merge(m, src)
}
func (m *PutDiagnosisDataSourceResponse) XXX_Size() int {
	return xxx_messageInfo_PutDiagnosisDataSourceResponse.Size(m)
}
func (m *PutDiagnosisDataSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDiagnosisDataSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutDiagnosisDataSourceResponse proto.InternalMessageInfo

func (m *PutDiagnosisDataSourceResponse) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *PutDiagnosisDataSourceResponse) GetDiagnosisDataSource() *DiagnosisDataSource {
	if m != nil {
		return m.DiagnosisDataSource
	}
	return nil
}

type DeleteDiagnosisDataSourceRequest struct {
	ProjectId             []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DiagnosisDataSourceId uint32   `protobuf:"varint,2,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *DeleteDiagnosisDataSourceRequest) Reset()         { *m = DeleteDiagnosisDataSourceRequest{} }
func (m *DeleteDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*DeleteDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{13}
}

func (m *DeleteDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *DeleteDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *DeleteDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDiagnosisDataSourceRequest.Size(m)
}
func (m *DeleteDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *DeleteDiagnosisDataSourceRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *DeleteDiagnosisDataSourceRequest) GetDiagnosisDataSourceId() uint32 {
	if m != nil {
		return m.DiagnosisDataSourceId
	}
	return 0
}

//KICK Diagnosis
type StartDiagnosisRequest struct {
	RelDiagnosisDataSourceId uint32   `protobuf:"varint,1,opt,name=rel_diagnosis_data_source_id,json=relDiagnosisDataSourceId,proto3" json:"rel_diagnosis_data_source_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *StartDiagnosisRequest) Reset()         { *m = StartDiagnosisRequest{} }
func (m *StartDiagnosisRequest) String() string { return proto.CompactTextString(m) }
func (*StartDiagnosisRequest) ProtoMessage()    {}
func (*StartDiagnosisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{14}
}

func (m *StartDiagnosisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartDiagnosisRequest.Unmarshal(m, b)
}
func (m *StartDiagnosisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartDiagnosisRequest.Marshal(b, m, deterministic)
}
func (m *StartDiagnosisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartDiagnosisRequest.Merge(m, src)
}
func (m *StartDiagnosisRequest) XXX_Size() int {
	return xxx_messageInfo_StartDiagnosisRequest.Size(m)
}
func (m *StartDiagnosisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartDiagnosisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartDiagnosisRequest proto.InternalMessageInfo

func (m *StartDiagnosisRequest) GetRelDiagnosisDataSourceId() uint32 {
	if m != nil {
		return m.RelDiagnosisDataSourceId
	}
	return 0
}

type StartDiagnosisResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartDiagnosisResponse) Reset()         { *m = StartDiagnosisResponse{} }
func (m *StartDiagnosisResponse) String() string { return proto.CompactTextString(m) }
func (*StartDiagnosisResponse) ProtoMessage()    {}
func (*StartDiagnosisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{15}
}

func (m *StartDiagnosisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartDiagnosisResponse.Unmarshal(m, b)
}
func (m *StartDiagnosisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartDiagnosisResponse.Marshal(b, m, deterministic)
}
func (m *StartDiagnosisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartDiagnosisResponse.Merge(m, src)
}
func (m *StartDiagnosisResponse) XXX_Size() int {
	return xxx_messageInfo_StartDiagnosisResponse.Size(m)
}
func (m *StartDiagnosisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartDiagnosisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartDiagnosisResponse proto.InternalMessageInfo

func (m *StartDiagnosisResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// RelDiagnosisDataSourceService
type ListRelDiagnosisDataSourceRequest struct {
	ProjectId             []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RecordId              string   `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	JiraId                string   `protobuf:"bytes,3,opt,name=jira_id,json=jiraId,proto3" json:"jira_id,omitempty"`
	DiagnosisId           uint32   `protobuf:"varint,4,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	DiagnosisDataSourceId uint32   `protobuf:"varint,5,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ListRelDiagnosisDataSourceRequest) Reset()         { *m = ListRelDiagnosisDataSourceRequest{} }
func (m *ListRelDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*ListRelDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*ListRelDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{16}
}

func (m *ListRelDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRelDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *ListRelDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRelDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *ListRelDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRelDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *ListRelDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_ListRelDiagnosisDataSourceRequest.Size(m)
}
func (m *ListRelDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRelDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRelDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *ListRelDiagnosisDataSourceRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *ListRelDiagnosisDataSourceRequest) GetRecordId() string {
	if m != nil {
		return m.RecordId
	}
	return ""
}

func (m *ListRelDiagnosisDataSourceRequest) GetJiraId() string {
	if m != nil {
		return m.JiraId
	}
	return ""
}

func (m *ListRelDiagnosisDataSourceRequest) GetDiagnosisId() uint32 {
	if m != nil {
		return m.DiagnosisId
	}
	return 0
}

func (m *ListRelDiagnosisDataSourceRequest) GetDiagnosisDataSourceId() uint32 {
	if m != nil {
		return m.DiagnosisDataSourceId
	}
	return 0
}

type ListRelDiagnosisDataSourceResponse struct {
	RelDiagnosisDataSource []*RelDiagnosisDataSource `protobuf:"bytes,1,rep,name=rel_diagnosis_data_source,json=relDiagnosisDataSource,proto3" json:"rel_diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *ListRelDiagnosisDataSourceResponse) Reset()         { *m = ListRelDiagnosisDataSourceResponse{} }
func (m *ListRelDiagnosisDataSourceResponse) String() string { return proto.CompactTextString(m) }
func (*ListRelDiagnosisDataSourceResponse) ProtoMessage()    {}
func (*ListRelDiagnosisDataSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{17}
}

func (m *ListRelDiagnosisDataSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRelDiagnosisDataSourceResponse.Unmarshal(m, b)
}
func (m *ListRelDiagnosisDataSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRelDiagnosisDataSourceResponse.Marshal(b, m, deterministic)
}
func (m *ListRelDiagnosisDataSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRelDiagnosisDataSourceResponse.Merge(m, src)
}
func (m *ListRelDiagnosisDataSourceResponse) XXX_Size() int {
	return xxx_messageInfo_ListRelDiagnosisDataSourceResponse.Size(m)
}
func (m *ListRelDiagnosisDataSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRelDiagnosisDataSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRelDiagnosisDataSourceResponse proto.InternalMessageInfo

func (m *ListRelDiagnosisDataSourceResponse) GetRelDiagnosisDataSource() []*RelDiagnosisDataSource {
	if m != nil {
		return m.RelDiagnosisDataSource
	}
	return nil
}

type GetRelDiagnosisDataSourceRequest struct {
	ProjectId                []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelDiagnosisDataSourceId uint32   `protobuf:"varint,2,opt,name=rel_diagnosis_data_source_id,json=relDiagnosisDataSourceId,proto3" json:"rel_diagnosis_data_source_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *GetRelDiagnosisDataSourceRequest) Reset()         { *m = GetRelDiagnosisDataSourceRequest{} }
func (m *GetRelDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*GetRelDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*GetRelDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{18}
}

func (m *GetRelDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *GetRelDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *GetRelDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *GetRelDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_GetRelDiagnosisDataSourceRequest.Size(m)
}
func (m *GetRelDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *GetRelDiagnosisDataSourceRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *GetRelDiagnosisDataSourceRequest) GetRelDiagnosisDataSourceId() uint32 {
	if m != nil {
		return m.RelDiagnosisDataSourceId
	}
	return 0
}

type GetRelDiagnosisDataSourceResponse struct {
	RelDiagnosisDataSource *RelDiagnosisDataSource `protobuf:"bytes,1,opt,name=rel_diagnosis_data_source,json=relDiagnosisDataSource,proto3" json:"rel_diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *GetRelDiagnosisDataSourceResponse) Reset()         { *m = GetRelDiagnosisDataSourceResponse{} }
func (m *GetRelDiagnosisDataSourceResponse) String() string { return proto.CompactTextString(m) }
func (*GetRelDiagnosisDataSourceResponse) ProtoMessage()    {}
func (*GetRelDiagnosisDataSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{19}
}

func (m *GetRelDiagnosisDataSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelDiagnosisDataSourceResponse.Unmarshal(m, b)
}
func (m *GetRelDiagnosisDataSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelDiagnosisDataSourceResponse.Marshal(b, m, deterministic)
}
func (m *GetRelDiagnosisDataSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelDiagnosisDataSourceResponse.Merge(m, src)
}
func (m *GetRelDiagnosisDataSourceResponse) XXX_Size() int {
	return xxx_messageInfo_GetRelDiagnosisDataSourceResponse.Size(m)
}
func (m *GetRelDiagnosisDataSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelDiagnosisDataSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelDiagnosisDataSourceResponse proto.InternalMessageInfo

func (m *GetRelDiagnosisDataSourceResponse) GetRelDiagnosisDataSource() *RelDiagnosisDataSource {
	if m != nil {
		return m.RelDiagnosisDataSource
	}
	return nil
}

type PutRelDiagnosisDataSourceRequest struct {
	ProjectId              uint32                           `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelDiagnosisDataSource *RelDiagnosisDataSourceForUpsert `protobuf:"bytes,2,opt,name=rel_diagnosis_data_source,json=relDiagnosisDataSource,proto3" json:"rel_diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                         `json:"-"`
	XXX_unrecognized       []byte                           `json:"-"`
	XXX_sizecache          int32                            `json:"-"`
}

func (m *PutRelDiagnosisDataSourceRequest) Reset()         { *m = PutRelDiagnosisDataSourceRequest{} }
func (m *PutRelDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*PutRelDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*PutRelDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{20}
}

func (m *PutRelDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRelDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *PutRelDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRelDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *PutRelDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRelDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *PutRelDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_PutRelDiagnosisDataSourceRequest.Size(m)
}
func (m *PutRelDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRelDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRelDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *PutRelDiagnosisDataSourceRequest) GetProjectId() uint32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *PutRelDiagnosisDataSourceRequest) GetRelDiagnosisDataSource() *RelDiagnosisDataSourceForUpsert {
	if m != nil {
		return m.RelDiagnosisDataSource
	}
	return nil
}

type PutRelDiagnosisDataSourceResponse struct {
	RelDiagnosisDataSource *RelDiagnosisDataSource `protobuf:"bytes,1,opt,name=rel_diagnosis_data_source,json=relDiagnosisDataSource,proto3" json:"rel_diagnosis_data_source,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *PutRelDiagnosisDataSourceResponse) Reset()         { *m = PutRelDiagnosisDataSourceResponse{} }
func (m *PutRelDiagnosisDataSourceResponse) String() string { return proto.CompactTextString(m) }
func (*PutRelDiagnosisDataSourceResponse) ProtoMessage()    {}
func (*PutRelDiagnosisDataSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{21}
}

func (m *PutRelDiagnosisDataSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRelDiagnosisDataSourceResponse.Unmarshal(m, b)
}
func (m *PutRelDiagnosisDataSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRelDiagnosisDataSourceResponse.Marshal(b, m, deterministic)
}
func (m *PutRelDiagnosisDataSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRelDiagnosisDataSourceResponse.Merge(m, src)
}
func (m *PutRelDiagnosisDataSourceResponse) XXX_Size() int {
	return xxx_messageInfo_PutRelDiagnosisDataSourceResponse.Size(m)
}
func (m *PutRelDiagnosisDataSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRelDiagnosisDataSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutRelDiagnosisDataSourceResponse proto.InternalMessageInfo

func (m *PutRelDiagnosisDataSourceResponse) GetRelDiagnosisDataSource() *RelDiagnosisDataSource {
	if m != nil {
		return m.RelDiagnosisDataSource
	}
	return nil
}

type DeleteRelDiagnosisDataSourceRequest struct {
	ProjectId                []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelDiagnosisDataSourceId uint32   `protobuf:"varint,2,opt,name=rel_diagnosis_data_source_id,json=relDiagnosisDataSourceId,proto3" json:"rel_diagnosis_data_source_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *DeleteRelDiagnosisDataSourceRequest) Reset()         { *m = DeleteRelDiagnosisDataSourceRequest{} }
func (m *DeleteRelDiagnosisDataSourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRelDiagnosisDataSourceRequest) ProtoMessage()    {}
func (*DeleteRelDiagnosisDataSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{22}
}

func (m *DeleteRelDiagnosisDataSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRelDiagnosisDataSourceRequest.Unmarshal(m, b)
}
func (m *DeleteRelDiagnosisDataSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRelDiagnosisDataSourceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRelDiagnosisDataSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRelDiagnosisDataSourceRequest.Merge(m, src)
}
func (m *DeleteRelDiagnosisDataSourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRelDiagnosisDataSourceRequest.Size(m)
}
func (m *DeleteRelDiagnosisDataSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRelDiagnosisDataSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRelDiagnosisDataSourceRequest proto.InternalMessageInfo

func (m *DeleteRelDiagnosisDataSourceRequest) GetProjectId() []uint32 {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *DeleteRelDiagnosisDataSourceRequest) GetRelDiagnosisDataSourceId() uint32 {
	if m != nil {
		return m.RelDiagnosisDataSourceId
	}
	return 0
}

func init() {
	proto.RegisterType((*ListDiagnosisRequest)(nil), "diagnosis.ListDiagnosisRequest")
	proto.RegisterType((*ListDiagnosisResponse)(nil), "diagnosis.ListDiagnosisResponse")
	proto.RegisterType((*GetDiagnosisRequest)(nil), "diagnosis.GetDiagnosisRequest")
	proto.RegisterType((*GetDiagnosisResponse)(nil), "diagnosis.GetDiagnosisResponse")
	proto.RegisterType((*PutDiagnosisRequest)(nil), "diagnosis.PutDiagnosisRequest")
	proto.RegisterType((*PutDiagnosisResponse)(nil), "diagnosis.PutDiagnosisResponse")
	proto.RegisterType((*DeleteDiagnosisRequest)(nil), "diagnosis.DeleteDiagnosisRequest")
	proto.RegisterType((*ListDiagnosisDataSourceRequest)(nil), "diagnosis.ListDiagnosisDataSourceRequest")
	proto.RegisterType((*ListDiagnosisDataSourceResponse)(nil), "diagnosis.ListDiagnosisDataSourceResponse")
	proto.RegisterType((*GetDiagnosisDataSourceRequest)(nil), "diagnosis.GetDiagnosisDataSourceRequest")
	proto.RegisterType((*GetDiagnosisDataSourceResponse)(nil), "diagnosis.GetDiagnosisDataSourceResponse")
	proto.RegisterType((*PutDiagnosisDataSourceRequest)(nil), "diagnosis.PutDiagnosisDataSourceRequest")
	proto.RegisterType((*PutDiagnosisDataSourceResponse)(nil), "diagnosis.PutDiagnosisDataSourceResponse")
	proto.RegisterType((*DeleteDiagnosisDataSourceRequest)(nil), "diagnosis.DeleteDiagnosisDataSourceRequest")
	proto.RegisterType((*StartDiagnosisRequest)(nil), "diagnosis.StartDiagnosisRequest")
	proto.RegisterType((*StartDiagnosisResponse)(nil), "diagnosis.StartDiagnosisResponse")
	proto.RegisterType((*ListRelDiagnosisDataSourceRequest)(nil), "diagnosis.ListRelDiagnosisDataSourceRequest")
	proto.RegisterType((*ListRelDiagnosisDataSourceResponse)(nil), "diagnosis.ListRelDiagnosisDataSourceResponse")
	proto.RegisterType((*GetRelDiagnosisDataSourceRequest)(nil), "diagnosis.GetRelDiagnosisDataSourceRequest")
	proto.RegisterType((*GetRelDiagnosisDataSourceResponse)(nil), "diagnosis.GetRelDiagnosisDataSourceResponse")
	proto.RegisterType((*PutRelDiagnosisDataSourceRequest)(nil), "diagnosis.PutRelDiagnosisDataSourceRequest")
	proto.RegisterType((*PutRelDiagnosisDataSourceResponse)(nil), "diagnosis.PutRelDiagnosisDataSourceResponse")
	proto.RegisterType((*DeleteRelDiagnosisDataSourceRequest)(nil), "diagnosis.DeleteRelDiagnosisDataSourceRequest")
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_8e16ccb8c5307b32) }

var fileDescriptor_8e16ccb8c5307b32 = []byte{
	// 886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x5f, 0x6f, 0x12, 0x41,
	0x10, 0xe7, 0x68, 0x6d, 0x65, 0xfa, 0x47, 0xb3, 0x05, 0x4a, 0xaf, 0x85, 0xc2, 0xf9, 0x60, 0x5b,
	0xdb, 0x23, 0xc1, 0x87, 0xc6, 0x98, 0x98, 0xa8, 0x68, 0x43, 0x35, 0xa6, 0x1e, 0x9a, 0x26, 0xd5,
	0xa4, 0x39, 0xb8, 0x95, 0x5e, 0x05, 0x8e, 0xde, 0x2d, 0x6a, 0xf5, 0xa9, 0xc6, 0x6f, 0xe0, 0xa3,
	0x5f, 0xc0, 0xef, 0xa3, 0xf1, 0xd1, 0xcf, 0x62, 0xe0, 0xb8, 0x63, 0x0f, 0x76, 0xf7, 0xa0, 0x44,
	0x7d, 0xe3, 0x76, 0x87, 0x99, 0xdf, 0xfc, 0x66, 0x76, 0xe6, 0x07, 0x8b, 0x0e, 0xb6, 0xdf, 0x99,
	0x55, 0xec, 0xa8, 0x2d, 0xdb, 0x22, 0x16, 0x8a, 0x19, 0xa6, 0x5e, 0x6b, 0x5a, 0x8e, 0xe9, 0xc8,
	0x8b, 0xb8, 0x49, 0x4c, 0x62, 0x7a, 0x57, 0xf2, 0x6a, 0xcd, 0xb2, 0x6a, 0x75, 0x9c, 0xef, 0x7e,
	0x55, 0xda, 0x6f, 0xf2, 0xb8, 0xd1, 0x22, 0xe7, 0xee, 0xa5, 0x52, 0x82, 0xf8, 0x53, 0xd3, 0x21,
	0x45, 0xef, 0xdf, 0x1a, 0x3e, 0x6b, 0x63, 0x87, 0xa0, 0x34, 0x40, 0xcb, 0xb6, 0x4e, 0x71, 0x95,
	0x1c, 0x9b, 0x46, 0x4a, 0xca, 0x4e, 0x6d, 0x2c, 0x68, 0xb1, 0xde, 0x49, 0xc9, 0x40, 0x08, 0xa6,
	0x9b, 0x7a, 0x03, 0xa7, 0xa2, 0x59, 0x69, 0x23, 0xa6, 0x75, 0x7f, 0x2b, 0x4f, 0x20, 0x31, 0xe0,
	0xca, 0x69, 0x59, 0x4d, 0x07, 0xa3, 0x02, 0xf4, 0xd1, 0x75, 0x5d, 0xcd, 0x15, 0xe2, 0xaa, 0x7f,
	0xa2, 0xf6, 0xff, 0xd0, 0x37, 0x53, 0x0e, 0x61, 0x69, 0x0f, 0x8f, 0x0d, 0x2b, 0x07, 0xf3, 0xbe,
	0x8b, 0x8e, 0x41, 0x07, 0xde, 0x82, 0x36, 0xe7, 0x9f, 0x95, 0x0c, 0x65, 0x1f, 0xe2, 0x41, 0xc7,
	0x6c, 0x90, 0xd2, 0x28, 0x20, 0xcf, 0x60, 0xe9, 0xa0, 0x1d, 0x0e, 0x52, 0x0a, 0x82, 0xbc, 0x4b,
	0x47, 0x8a, 0x76, 0x23, 0xa5, 0x59, 0x91, 0x1e, 0x5b, 0xf6, 0xcb, 0x96, 0x83, 0x6d, 0x42, 0x87,
	0xdc, 0x87, 0x78, 0x30, 0xe4, 0x04, 0xf0, 0x8f, 0x20, 0x59, 0xc4, 0x75, 0x4c, 0xf0, 0x5f, 0xa0,
	0xb9, 0x0c, 0x99, 0x40, 0x33, 0x14, 0x75, 0xa2, 0x97, 0xad, 0xb6, 0x5d, 0xc5, 0x13, 0x74, 0x58,
	0x1b, 0xd6, 0xb9, 0x4e, 0x7b, 0x3c, 0x68, 0x90, 0xe8, 0x43, 0x33, 0x74, 0xa2, 0x1f, 0x3b, 0x5d,
	0x83, 0x5e, 0xdf, 0x65, 0x58, 0x9c, 0x50, 0x6e, 0x96, 0x8c, 0xe1, 0x43, 0xe5, 0x3d, 0xa4, 0xe9,
	0x96, 0x09, 0x4f, 0x65, 0xa0, 0xe0, 0xbb, 0x90, 0x62, 0x62, 0xea, 0x53, 0x97, 0x60, 0x84, 0x2d,
	0x19, 0x0a, 0x81, 0x0c, 0x2f, 0x70, 0x78, 0xba, 0xd2, 0x65, 0xd3, 0xfd, 0x26, 0x41, 0x9a, 0xee,
	0xb1, 0xb1, 0xf3, 0x7d, 0xc5, 0x03, 0xe5, 0x36, 0xfb, 0x4d, 0x31, 0xa8, 0x7e, 0xdb, 0x33, 0xd1,
	0x7d, 0x95, 0x20, 0xc3, 0x43, 0xd7, 0x23, 0x25, 0xa4, 0xb3, 0x34, 0x31, 0xbc, 0x4b, 0x71, 0xf6,
	0x11, 0xb2, 0x03, 0x4f, 0x69, 0xec, 0x86, 0xbf, 0x74, 0x97, 0x1c, 0x42, 0xa2, 0x4c, 0x74, 0x7b,
	0x78, 0x0e, 0xdd, 0x83, 0x35, 0x1b, 0xd7, 0x8f, 0xb9, 0x5e, 0xdd, 0xc2, 0xa5, 0x6c, 0x5c, 0x2f,
	0x32, 0x1d, 0x17, 0x20, 0x39, 0xe8, 0xb8, 0xc7, 0x70, 0x0a, 0x66, 0x1b, 0xd8, 0x71, 0xf4, 0x9a,
	0xdb, 0x68, 0x31, 0xcd, 0xfb, 0x54, 0x7e, 0x4a, 0x90, 0xeb, 0xbc, 0x51, 0x8d, 0xe9, 0x74, 0x44,
	0x2a, 0x56, 0x21, 0x66, 0xe3, 0xaa, 0x65, 0x1b, 0x5e, 0xee, 0x31, 0xed, 0xaa, 0x7b, 0x50, 0x32,
	0xd0, 0x32, 0xcc, 0x9e, 0x9a, 0xb6, 0xde, 0xb9, 0x9a, 0xea, 0x5e, 0xcd, 0x74, 0x3e, 0x19, 0x53,
	0x69, 0x7a, 0x68, 0x2a, 0x09, 0x39, 0xbe, 0x22, 0xe2, 0xf8, 0xb3, 0x04, 0x8a, 0x28, 0xad, 0x1e,
	0x2f, 0xaf, 0x61, 0x85, 0xcb, 0x78, 0x6f, 0x02, 0xe5, 0xa8, 0xf6, 0xe2, 0x78, 0x4b, 0xb2, 0x2b,
	0xa2, 0x5c, 0x48, 0x90, 0xdd, 0xc3, 0x93, 0x51, 0x1b, 0xd6, 0x13, 0xd1, 0x90, 0x9e, 0xb8, 0x90,
	0x20, 0x27, 0xc0, 0x30, 0x1a, 0x0f, 0xd2, 0x64, 0x3c, 0x7c, 0x97, 0x20, 0x7b, 0xd0, 0x1e, 0x93,
	0x87, 0x81, 0x19, 0x85, 0x45, 0x08, 0xdd, 0x41, 0xb0, 0x15, 0x8a, 0xb0, 0x3f, 0xaa, 0x04, 0x25,
	0xcb, 0x09, 0xa0, 0xfe, 0x13, 0xba, 0xbe, 0x48, 0x70, 0xc3, 0x1d, 0x4e, 0xff, 0xb3, 0x73, 0x0a,
	0xbf, 0xa3, 0x70, 0xdd, 0xbf, 0x29, 0xbb, 0xea, 0x15, 0xbd, 0x80, 0x85, 0xc0, 0x46, 0x47, 0xeb,
	0x54, 0x9e, 0x2c, 0x61, 0x2a, 0x67, 0xf9, 0x06, 0x2e, 0x9b, 0x4a, 0x04, 0x3d, 0x87, 0x79, 0x7a,
	0x6f, 0x22, 0x7a, 0xa4, 0x33, 0x54, 0xa5, 0xbc, 0xce, 0xbd, 0xa7, 0x5d, 0xd2, 0x5b, 0x27, 0xe0,
	0x92, 0xa1, 0x01, 0x03, 0x2e, 0x59, 0x82, 0x4d, 0x89, 0xa0, 0x67, 0x70, 0x6d, 0x60, 0x67, 0x20,
	0xba, 0xca, 0x6c, 0x69, 0x26, 0x27, 0x55, 0x57, 0xce, 0xab, 0x9e, 0x9c, 0x57, 0x1f, 0x75, 0xe4,
	0xbc, 0x12, 0x29, 0xfc, 0x9a, 0x02, 0x99, 0x41, 0xbd, 0x47, 0xb5, 0x0d, 0xcb, 0x1c, 0xf1, 0x84,
	0x36, 0x79, 0x9c, 0x0e, 0x35, 0x89, 0xbc, 0x35, 0x8a, 0xa9, 0x9f, 0xa2, 0x05, 0x49, 0xb6, 0x80,
	0x41, 0x1b, 0x1c, 0xca, 0x87, 0x23, 0x6e, 0x8e, 0x60, 0x49, 0x07, 0x64, 0x8b, 0x83, 0x40, 0x40,
	0xa1, 0xba, 0x09, 0x04, 0x14, 0x2b, 0x0d, 0x25, 0x82, 0x2a, 0xb0, 0xc2, 0x5d, 0xfc, 0xe8, 0x16,
	0xbf, 0x9c, 0xc3, 0x61, 0xf9, 0x85, 0xfd, 0x31, 0x0d, 0x69, 0xf6, 0xd3, 0xf5, 0x6a, 0xfb, 0x09,
	0x64, 0xfe, 0x76, 0x42, 0xdb, 0x03, 0x35, 0x13, 0x8e, 0x01, 0x79, 0x67, 0x44, 0x6b, 0x9f, 0x82,
	0x0f, 0xb0, 0xc2, 0xdd, 0x08, 0x01, 0x0a, 0xc2, 0x76, 0x97, 0xbc, 0x3d, 0x9a, 0x31, 0x1d, 0x99,
	0x3b, 0x5c, 0x03, 0x91, 0xc3, 0xb6, 0x45, 0x20, 0x72, 0xe8, 0xbc, 0x56, 0x22, 0xe8, 0x04, 0xd6,
	0x44, 0x23, 0x15, 0xa9, 0x43, 0x95, 0x17, 0xc7, 0xe7, 0x16, 0x1f, 0x1d, 0xc2, 0x62, 0x50, 0x84,
	0x21, 0x7a, 0x02, 0x32, 0x85, 0x9f, 0x9c, 0x13, 0x58, 0x78, 0x29, 0x3c, 0xb8, 0x73, 0xb4, 0x5b,
	0x33, 0xc9, 0x49, 0xbb, 0xa2, 0x56, 0xad, 0x46, 0xfe, 0xe1, 0x79, 0x05, 0xdb, 0xf7, 0x6b, 0xb8,
	0x49, 0xf2, 0x0d, 0xb3, 0x61, 0x39, 0xfa, 0x8e, 0xef, 0x22, 0xdf, 0x7a, 0x5b, 0xcb, 0xb7, 0x2a,
	0x79, 0xff, 0xa0, 0x32, 0xd3, 0x45, 0x79, 0xfb, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x75, 0x42,
	0x42, 0xd5, 0x85, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiagnosisServiceClient is the client API for DiagnosisService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiagnosisServiceClient interface {
	// CRUD
	ListDiagnosis(ctx context.Context, in *ListDiagnosisRequest, opts ...grpc.CallOption) (*ListDiagnosisResponse, error)
	GetDiagnosis(ctx context.Context, in *GetDiagnosisRequest, opts ...grpc.CallOption) (*GetDiagnosisResponse, error)
	PutDiagnosis(ctx context.Context, in *PutDiagnosisRequest, opts ...grpc.CallOption) (*PutDiagnosisResponse, error)
	DeleteDiagnosis(ctx context.Context, in *DeleteDiagnosisRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type diagnosisServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiagnosisServiceClient(cc *grpc.ClientConn) DiagnosisServiceClient {
	return &diagnosisServiceClient{cc}
}

func (c *diagnosisServiceClient) ListDiagnosis(ctx context.Context, in *ListDiagnosisRequest, opts ...grpc.CallOption) (*ListDiagnosisResponse, error) {
	out := new(ListDiagnosisResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisService/ListDiagnosis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosisServiceClient) GetDiagnosis(ctx context.Context, in *GetDiagnosisRequest, opts ...grpc.CallOption) (*GetDiagnosisResponse, error) {
	out := new(GetDiagnosisResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisService/GetDiagnosis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosisServiceClient) PutDiagnosis(ctx context.Context, in *PutDiagnosisRequest, opts ...grpc.CallOption) (*PutDiagnosisResponse, error) {
	out := new(PutDiagnosisResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisService/PutDiagnosis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosisServiceClient) DeleteDiagnosis(ctx context.Context, in *DeleteDiagnosisRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisService/DeleteDiagnosis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiagnosisServiceServer is the server API for DiagnosisService service.
type DiagnosisServiceServer interface {
	// CRUD
	ListDiagnosis(context.Context, *ListDiagnosisRequest) (*ListDiagnosisResponse, error)
	GetDiagnosis(context.Context, *GetDiagnosisRequest) (*GetDiagnosisResponse, error)
	PutDiagnosis(context.Context, *PutDiagnosisRequest) (*PutDiagnosisResponse, error)
	DeleteDiagnosis(context.Context, *DeleteDiagnosisRequest) (*empty.Empty, error)
}

// UnimplementedDiagnosisServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiagnosisServiceServer struct {
}

func (*UnimplementedDiagnosisServiceServer) ListDiagnosis(ctx context.Context, req *ListDiagnosisRequest) (*ListDiagnosisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDiagnosis not implemented")
}
func (*UnimplementedDiagnosisServiceServer) GetDiagnosis(ctx context.Context, req *GetDiagnosisRequest) (*GetDiagnosisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiagnosis not implemented")
}
func (*UnimplementedDiagnosisServiceServer) PutDiagnosis(ctx context.Context, req *PutDiagnosisRequest) (*PutDiagnosisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutDiagnosis not implemented")
}
func (*UnimplementedDiagnosisServiceServer) DeleteDiagnosis(ctx context.Context, req *DeleteDiagnosisRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDiagnosis not implemented")
}

func RegisterDiagnosisServiceServer(s *grpc.Server, srv DiagnosisServiceServer) {
	s.RegisterService(&_DiagnosisService_serviceDesc, srv)
}

func _DiagnosisService_ListDiagnosis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDiagnosisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisServiceServer).ListDiagnosis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisService/ListDiagnosis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisServiceServer).ListDiagnosis(ctx, req.(*ListDiagnosisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiagnosisService_GetDiagnosis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiagnosisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisServiceServer).GetDiagnosis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisService/GetDiagnosis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisServiceServer).GetDiagnosis(ctx, req.(*GetDiagnosisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiagnosisService_PutDiagnosis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDiagnosisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisServiceServer).PutDiagnosis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisService/PutDiagnosis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisServiceServer).PutDiagnosis(ctx, req.(*PutDiagnosisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiagnosisService_DeleteDiagnosis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDiagnosisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisServiceServer).DeleteDiagnosis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisService/DeleteDiagnosis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisServiceServer).DeleteDiagnosis(ctx, req.(*DeleteDiagnosisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiagnosisService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "diagnosis.DiagnosisService",
	HandlerType: (*DiagnosisServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDiagnosis",
			Handler:    _DiagnosisService_ListDiagnosis_Handler,
		},
		{
			MethodName: "GetDiagnosis",
			Handler:    _DiagnosisService_GetDiagnosis_Handler,
		},
		{
			MethodName: "PutDiagnosis",
			Handler:    _DiagnosisService_PutDiagnosis_Handler,
		},
		{
			MethodName: "DeleteDiagnosis",
			Handler:    _DiagnosisService_DeleteDiagnosis_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// DiagnosisDataSourceServiceClient is the client API for DiagnosisDataSourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiagnosisDataSourceServiceClient interface {
	// CRUD
	ListDiagnosisDataSource(ctx context.Context, in *ListDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*ListDiagnosisDataSourceResponse, error)
	GetDiagnosisDataSource(ctx context.Context, in *GetDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*GetDiagnosisDataSourceResponse, error)
	PutDiagnosisDataSource(ctx context.Context, in *PutDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*PutDiagnosisDataSourceResponse, error)
	DeleteDiagnosisDataSource(ctx context.Context, in *DeleteDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type diagnosisDataSourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiagnosisDataSourceServiceClient(cc *grpc.ClientConn) DiagnosisDataSourceServiceClient {
	return &diagnosisDataSourceServiceClient{cc}
}

func (c *diagnosisDataSourceServiceClient) ListDiagnosisDataSource(ctx context.Context, in *ListDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*ListDiagnosisDataSourceResponse, error) {
	out := new(ListDiagnosisDataSourceResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisDataSourceService/ListDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosisDataSourceServiceClient) GetDiagnosisDataSource(ctx context.Context, in *GetDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*GetDiagnosisDataSourceResponse, error) {
	out := new(GetDiagnosisDataSourceResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisDataSourceService/GetDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosisDataSourceServiceClient) PutDiagnosisDataSource(ctx context.Context, in *PutDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*PutDiagnosisDataSourceResponse, error) {
	out := new(PutDiagnosisDataSourceResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisDataSourceService/PutDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosisDataSourceServiceClient) DeleteDiagnosisDataSource(ctx context.Context, in *DeleteDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/diagnosis.DiagnosisDataSourceService/DeleteDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiagnosisDataSourceServiceServer is the server API for DiagnosisDataSourceService service.
type DiagnosisDataSourceServiceServer interface {
	// CRUD
	ListDiagnosisDataSource(context.Context, *ListDiagnosisDataSourceRequest) (*ListDiagnosisDataSourceResponse, error)
	GetDiagnosisDataSource(context.Context, *GetDiagnosisDataSourceRequest) (*GetDiagnosisDataSourceResponse, error)
	PutDiagnosisDataSource(context.Context, *PutDiagnosisDataSourceRequest) (*PutDiagnosisDataSourceResponse, error)
	DeleteDiagnosisDataSource(context.Context, *DeleteDiagnosisDataSourceRequest) (*empty.Empty, error)
}

// UnimplementedDiagnosisDataSourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiagnosisDataSourceServiceServer struct {
}

func (*UnimplementedDiagnosisDataSourceServiceServer) ListDiagnosisDataSource(ctx context.Context, req *ListDiagnosisDataSourceRequest) (*ListDiagnosisDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDiagnosisDataSource not implemented")
}
func (*UnimplementedDiagnosisDataSourceServiceServer) GetDiagnosisDataSource(ctx context.Context, req *GetDiagnosisDataSourceRequest) (*GetDiagnosisDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiagnosisDataSource not implemented")
}
func (*UnimplementedDiagnosisDataSourceServiceServer) PutDiagnosisDataSource(ctx context.Context, req *PutDiagnosisDataSourceRequest) (*PutDiagnosisDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutDiagnosisDataSource not implemented")
}
func (*UnimplementedDiagnosisDataSourceServiceServer) DeleteDiagnosisDataSource(ctx context.Context, req *DeleteDiagnosisDataSourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDiagnosisDataSource not implemented")
}

func RegisterDiagnosisDataSourceServiceServer(s *grpc.Server, srv DiagnosisDataSourceServiceServer) {
	s.RegisterService(&_DiagnosisDataSourceService_serviceDesc, srv)
}

func _DiagnosisDataSourceService_ListDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisDataSourceServiceServer).ListDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisDataSourceService/ListDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisDataSourceServiceServer).ListDiagnosisDataSource(ctx, req.(*ListDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiagnosisDataSourceService_GetDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisDataSourceServiceServer).GetDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisDataSourceService/GetDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisDataSourceServiceServer).GetDiagnosisDataSource(ctx, req.(*GetDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiagnosisDataSourceService_PutDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisDataSourceServiceServer).PutDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisDataSourceService/PutDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisDataSourceServiceServer).PutDiagnosisDataSource(ctx, req.(*PutDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiagnosisDataSourceService_DeleteDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosisDataSourceServiceServer).DeleteDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.DiagnosisDataSourceService/DeleteDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosisDataSourceServiceServer).DeleteDiagnosisDataSource(ctx, req.(*DeleteDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiagnosisDataSourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "diagnosis.DiagnosisDataSourceService",
	HandlerType: (*DiagnosisDataSourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDiagnosisDataSource",
			Handler:    _DiagnosisDataSourceService_ListDiagnosisDataSource_Handler,
		},
		{
			MethodName: "GetDiagnosisDataSource",
			Handler:    _DiagnosisDataSourceService_GetDiagnosisDataSource_Handler,
		},
		{
			MethodName: "PutDiagnosisDataSource",
			Handler:    _DiagnosisDataSourceService_PutDiagnosisDataSource_Handler,
		},
		{
			MethodName: "DeleteDiagnosisDataSource",
			Handler:    _DiagnosisDataSourceService_DeleteDiagnosisDataSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// RelDiagnosisDataSourceServiceClient is the client API for RelDiagnosisDataSourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RelDiagnosisDataSourceServiceClient interface {
	// CRUD
	ListRelDiagnosisDataSource(ctx context.Context, in *ListRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*ListRelDiagnosisDataSourceResponse, error)
	GetRelDiagnosisDataSource(ctx context.Context, in *GetRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*GetRelDiagnosisDataSourceResponse, error)
	PutRelDiagnosisDataSource(ctx context.Context, in *PutRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*PutRelDiagnosisDataSourceResponse, error)
	DeleteRelDiagnosisDataSource(ctx context.Context, in *DeleteRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// KICK
	StartDiagnosis(ctx context.Context, in *StartDiagnosisRequest, opts ...grpc.CallOption) (*StartDiagnosisResponse, error)
}

type relDiagnosisDataSourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewRelDiagnosisDataSourceServiceClient(cc *grpc.ClientConn) RelDiagnosisDataSourceServiceClient {
	return &relDiagnosisDataSourceServiceClient{cc}
}

func (c *relDiagnosisDataSourceServiceClient) ListRelDiagnosisDataSource(ctx context.Context, in *ListRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*ListRelDiagnosisDataSourceResponse, error) {
	out := new(ListRelDiagnosisDataSourceResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.RelDiagnosisDataSourceService/ListRelDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relDiagnosisDataSourceServiceClient) GetRelDiagnosisDataSource(ctx context.Context, in *GetRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*GetRelDiagnosisDataSourceResponse, error) {
	out := new(GetRelDiagnosisDataSourceResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.RelDiagnosisDataSourceService/GetRelDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relDiagnosisDataSourceServiceClient) PutRelDiagnosisDataSource(ctx context.Context, in *PutRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*PutRelDiagnosisDataSourceResponse, error) {
	out := new(PutRelDiagnosisDataSourceResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.RelDiagnosisDataSourceService/PutRelDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relDiagnosisDataSourceServiceClient) DeleteRelDiagnosisDataSource(ctx context.Context, in *DeleteRelDiagnosisDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/diagnosis.RelDiagnosisDataSourceService/DeleteRelDiagnosisDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relDiagnosisDataSourceServiceClient) StartDiagnosis(ctx context.Context, in *StartDiagnosisRequest, opts ...grpc.CallOption) (*StartDiagnosisResponse, error) {
	out := new(StartDiagnosisResponse)
	err := c.cc.Invoke(ctx, "/diagnosis.RelDiagnosisDataSourceService/StartDiagnosis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelDiagnosisDataSourceServiceServer is the server API for RelDiagnosisDataSourceService service.
type RelDiagnosisDataSourceServiceServer interface {
	// CRUD
	ListRelDiagnosisDataSource(context.Context, *ListRelDiagnosisDataSourceRequest) (*ListRelDiagnosisDataSourceResponse, error)
	GetRelDiagnosisDataSource(context.Context, *GetRelDiagnosisDataSourceRequest) (*GetRelDiagnosisDataSourceResponse, error)
	PutRelDiagnosisDataSource(context.Context, *PutRelDiagnosisDataSourceRequest) (*PutRelDiagnosisDataSourceResponse, error)
	DeleteRelDiagnosisDataSource(context.Context, *DeleteRelDiagnosisDataSourceRequest) (*empty.Empty, error)
	// KICK
	StartDiagnosis(context.Context, *StartDiagnosisRequest) (*StartDiagnosisResponse, error)
}

// UnimplementedRelDiagnosisDataSourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRelDiagnosisDataSourceServiceServer struct {
}

func (*UnimplementedRelDiagnosisDataSourceServiceServer) ListRelDiagnosisDataSource(ctx context.Context, req *ListRelDiagnosisDataSourceRequest) (*ListRelDiagnosisDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRelDiagnosisDataSource not implemented")
}
func (*UnimplementedRelDiagnosisDataSourceServiceServer) GetRelDiagnosisDataSource(ctx context.Context, req *GetRelDiagnosisDataSourceRequest) (*GetRelDiagnosisDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelDiagnosisDataSource not implemented")
}
func (*UnimplementedRelDiagnosisDataSourceServiceServer) PutRelDiagnosisDataSource(ctx context.Context, req *PutRelDiagnosisDataSourceRequest) (*PutRelDiagnosisDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutRelDiagnosisDataSource not implemented")
}
func (*UnimplementedRelDiagnosisDataSourceServiceServer) DeleteRelDiagnosisDataSource(ctx context.Context, req *DeleteRelDiagnosisDataSourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelDiagnosisDataSource not implemented")
}
func (*UnimplementedRelDiagnosisDataSourceServiceServer) StartDiagnosis(ctx context.Context, req *StartDiagnosisRequest) (*StartDiagnosisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartDiagnosis not implemented")
}

func RegisterRelDiagnosisDataSourceServiceServer(s *grpc.Server, srv RelDiagnosisDataSourceServiceServer) {
	s.RegisterService(&_RelDiagnosisDataSourceService_serviceDesc, srv)
}

func _RelDiagnosisDataSourceService_ListRelDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRelDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelDiagnosisDataSourceServiceServer).ListRelDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.RelDiagnosisDataSourceService/ListRelDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelDiagnosisDataSourceServiceServer).ListRelDiagnosisDataSource(ctx, req.(*ListRelDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelDiagnosisDataSourceService_GetRelDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelDiagnosisDataSourceServiceServer).GetRelDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.RelDiagnosisDataSourceService/GetRelDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelDiagnosisDataSourceServiceServer).GetRelDiagnosisDataSource(ctx, req.(*GetRelDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelDiagnosisDataSourceService_PutRelDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRelDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelDiagnosisDataSourceServiceServer).PutRelDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.RelDiagnosisDataSourceService/PutRelDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelDiagnosisDataSourceServiceServer).PutRelDiagnosisDataSource(ctx, req.(*PutRelDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelDiagnosisDataSourceService_DeleteRelDiagnosisDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRelDiagnosisDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelDiagnosisDataSourceServiceServer).DeleteRelDiagnosisDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.RelDiagnosisDataSourceService/DeleteRelDiagnosisDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelDiagnosisDataSourceServiceServer).DeleteRelDiagnosisDataSource(ctx, req.(*DeleteRelDiagnosisDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelDiagnosisDataSourceService_StartDiagnosis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartDiagnosisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelDiagnosisDataSourceServiceServer).StartDiagnosis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/diagnosis.RelDiagnosisDataSourceService/StartDiagnosis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelDiagnosisDataSourceServiceServer).StartDiagnosis(ctx, req.(*StartDiagnosisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RelDiagnosisDataSourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "diagnosis.RelDiagnosisDataSourceService",
	HandlerType: (*RelDiagnosisDataSourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRelDiagnosisDataSource",
			Handler:    _RelDiagnosisDataSourceService_ListRelDiagnosisDataSource_Handler,
		},
		{
			MethodName: "GetRelDiagnosisDataSource",
			Handler:    _RelDiagnosisDataSourceService_GetRelDiagnosisDataSource_Handler,
		},
		{
			MethodName: "PutRelDiagnosisDataSource",
			Handler:    _RelDiagnosisDataSourceService_PutRelDiagnosisDataSource_Handler,
		},
		{
			MethodName: "DeleteRelDiagnosisDataSource",
			Handler:    _RelDiagnosisDataSourceService_DeleteRelDiagnosisDataSource_Handler,
		},
		{
			MethodName: "StartDiagnosis",
			Handler:    _RelDiagnosisDataSourceService_StartDiagnosis_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}
