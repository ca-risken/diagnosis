// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: entities.proto

package diagnosis

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Diagnosis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnosisId uint32 `protobuf:"varint,1,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	ProjectId   uint32 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt   int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Diagnosis) Reset() {
	*x = Diagnosis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnosis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnosis) ProtoMessage() {}

func (x *Diagnosis) ProtoReflect() protoreflect.Message {
	mi := &file_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnosis.ProtoReflect.Descriptor instead.
func (*Diagnosis) Descriptor() ([]byte, []int) {
	return file_entities_proto_rawDescGZIP(), []int{0}
}

func (x *Diagnosis) GetDiagnosisId() uint32 {
	if x != nil {
		return x.DiagnosisId
	}
	return 0
}

func (x *Diagnosis) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Diagnosis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Diagnosis) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Diagnosis) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type DiagnosisForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnosisId uint32 `protobuf:"varint,1,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DiagnosisForUpsert) Reset() {
	*x = DiagnosisForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosisForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosisForUpsert) ProtoMessage() {}

func (x *DiagnosisForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosisForUpsert.ProtoReflect.Descriptor instead.
func (*DiagnosisForUpsert) Descriptor() ([]byte, []int) {
	return file_entities_proto_rawDescGZIP(), []int{1}
}

func (x *DiagnosisForUpsert) GetDiagnosisId() uint32 {
	if x != nil {
		return x.DiagnosisId
	}
	return 0
}

func (x *DiagnosisForUpsert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DiagnosisDataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnosisDataSourceId uint32  `protobuf:"varint,1,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	Name                  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description           string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MaxScore              float32 `protobuf:"fixed32,4,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	CreatedAt             int64   `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             int64   `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DiagnosisDataSource) Reset() {
	*x = DiagnosisDataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosisDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosisDataSource) ProtoMessage() {}

func (x *DiagnosisDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_entities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosisDataSource.ProtoReflect.Descriptor instead.
func (*DiagnosisDataSource) Descriptor() ([]byte, []int) {
	return file_entities_proto_rawDescGZIP(), []int{2}
}

func (x *DiagnosisDataSource) GetDiagnosisDataSourceId() uint32 {
	if x != nil {
		return x.DiagnosisDataSourceId
	}
	return 0
}

func (x *DiagnosisDataSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiagnosisDataSource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiagnosisDataSource) GetMaxScore() float32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *DiagnosisDataSource) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DiagnosisDataSource) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type DiagnosisDataSourceForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnosisDataSourceId uint32  `protobuf:"varint,1,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	Name                  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description           string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MaxScore              float32 `protobuf:"fixed32,4,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
}

func (x *DiagnosisDataSourceForUpsert) Reset() {
	*x = DiagnosisDataSourceForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosisDataSourceForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosisDataSourceForUpsert) ProtoMessage() {}

func (x *DiagnosisDataSourceForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_entities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosisDataSourceForUpsert.ProtoReflect.Descriptor instead.
func (*DiagnosisDataSourceForUpsert) Descriptor() ([]byte, []int) {
	return file_entities_proto_rawDescGZIP(), []int{3}
}

func (x *DiagnosisDataSourceForUpsert) GetDiagnosisDataSourceId() uint32 {
	if x != nil {
		return x.DiagnosisDataSourceId
	}
	return 0
}

func (x *DiagnosisDataSourceForUpsert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiagnosisDataSourceForUpsert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiagnosisDataSourceForUpsert) GetMaxScore() float32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

type RelDiagnosisDataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelDiagnosisDataSourceId uint32 `protobuf:"varint,1,opt,name=rel_diagnosis_data_source_id,json=relDiagnosisDataSourceId,proto3" json:"rel_diagnosis_data_source_id,omitempty"`
	DiagnosisDataSourceId    uint32 `protobuf:"varint,2,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	DiagnosisId              uint32 `protobuf:"varint,3,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	ProjectId                uint32 `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RecordId                 string `protobuf:"bytes,5,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	JiraId                   string `protobuf:"bytes,6,opt,name=jira_id,json=jiraId,proto3" json:"jira_id,omitempty"`
	JiraKey                  string `protobuf:"bytes,7,opt,name=jira_key,json=jiraKey,proto3" json:"jira_key,omitempty"`
	CreatedAt                int64  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                int64  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RelDiagnosisDataSource) Reset() {
	*x = RelDiagnosisDataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelDiagnosisDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelDiagnosisDataSource) ProtoMessage() {}

func (x *RelDiagnosisDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_entities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelDiagnosisDataSource.ProtoReflect.Descriptor instead.
func (*RelDiagnosisDataSource) Descriptor() ([]byte, []int) {
	return file_entities_proto_rawDescGZIP(), []int{4}
}

func (x *RelDiagnosisDataSource) GetRelDiagnosisDataSourceId() uint32 {
	if x != nil {
		return x.RelDiagnosisDataSourceId
	}
	return 0
}

func (x *RelDiagnosisDataSource) GetDiagnosisDataSourceId() uint32 {
	if x != nil {
		return x.DiagnosisDataSourceId
	}
	return 0
}

func (x *RelDiagnosisDataSource) GetDiagnosisId() uint32 {
	if x != nil {
		return x.DiagnosisId
	}
	return 0
}

func (x *RelDiagnosisDataSource) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *RelDiagnosisDataSource) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *RelDiagnosisDataSource) GetJiraId() string {
	if x != nil {
		return x.JiraId
	}
	return ""
}

func (x *RelDiagnosisDataSource) GetJiraKey() string {
	if x != nil {
		return x.JiraKey
	}
	return ""
}

func (x *RelDiagnosisDataSource) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RelDiagnosisDataSource) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type RelDiagnosisDataSourceForUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelDiagnosisDataSourceId uint32 `protobuf:"varint,1,opt,name=rel_diagnosis_data_source_id,json=relDiagnosisDataSourceId,proto3" json:"rel_diagnosis_data_source_id,omitempty"`
	DiagnosisDataSourceId    uint32 `protobuf:"varint,2,opt,name=diagnosis_data_source_id,json=diagnosisDataSourceId,proto3" json:"diagnosis_data_source_id,omitempty"`
	DiagnosisId              uint32 `protobuf:"varint,3,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	RecordId                 string `protobuf:"bytes,4,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	JiraId                   string `protobuf:"bytes,5,opt,name=jira_id,json=jiraId,proto3" json:"jira_id,omitempty"`
	JiraKey                  string `protobuf:"bytes,6,opt,name=jira_key,json=jiraKey,proto3" json:"jira_key,omitempty"`
}

func (x *RelDiagnosisDataSourceForUpsert) Reset() {
	*x = RelDiagnosisDataSourceForUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelDiagnosisDataSourceForUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelDiagnosisDataSourceForUpsert) ProtoMessage() {}

func (x *RelDiagnosisDataSourceForUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_entities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelDiagnosisDataSourceForUpsert.ProtoReflect.Descriptor instead.
func (*RelDiagnosisDataSourceForUpsert) Descriptor() ([]byte, []int) {
	return file_entities_proto_rawDescGZIP(), []int{5}
}

func (x *RelDiagnosisDataSourceForUpsert) GetRelDiagnosisDataSourceId() uint32 {
	if x != nil {
		return x.RelDiagnosisDataSourceId
	}
	return 0
}

func (x *RelDiagnosisDataSourceForUpsert) GetDiagnosisDataSourceId() uint32 {
	if x != nil {
		return x.DiagnosisDataSourceId
	}
	return 0
}

func (x *RelDiagnosisDataSourceForUpsert) GetDiagnosisId() uint32 {
	if x != nil {
		return x.DiagnosisId
	}
	return 0
}

func (x *RelDiagnosisDataSourceForUpsert) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *RelDiagnosisDataSourceForUpsert) GetJiraId() string {
	if x != nil {
		return x.JiraId
	}
	return ""
}

func (x *RelDiagnosisDataSourceForUpsert) GetJiraKey() string {
	if x != nil {
		return x.JiraKey
	}
	return ""
}

var File_entities_proto protoreflect.FileDescriptor

var file_entities_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x09,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b, 0x0a,
	0x12, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x13, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xaa, 0x01, 0x0a,
	0x1c, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x37, 0x0a,
	0x18, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x16, 0x52, 0x65,
	0x6c, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x72, 0x65, 0x6c, 0x5f, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x72, 0x65, 0x6c, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69,
	0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6a, 0x69, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a,
	0x69, 0x72, 0x61, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x69, 0x72, 0x61, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x69, 0x72, 0x61, 0x4b, 0x65, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8e,
	0x02, 0x0a, 0x1f, 0x52, 0x65, 0x6c, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x72, 0x65, 0x6c, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x72, 0x65, 0x6c, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6a,
	0x69, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x69,
	0x72, 0x61, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x69, 0x72, 0x61, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x69, 0x72, 0x61, 0x4b, 0x65, 0x79, 0x42,
	0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79,
	0x62, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62,
	0x2f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_entities_proto_rawDescOnce sync.Once
	file_entities_proto_rawDescData = file_entities_proto_rawDesc
)

func file_entities_proto_rawDescGZIP() []byte {
	file_entities_proto_rawDescOnce.Do(func() {
		file_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_entities_proto_rawDescData)
	})
	return file_entities_proto_rawDescData
}

var file_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_entities_proto_goTypes = []interface{}{
	(*Diagnosis)(nil),                       // 0: diagnosis.Diagnosis
	(*DiagnosisForUpsert)(nil),              // 1: diagnosis.DiagnosisForUpsert
	(*DiagnosisDataSource)(nil),             // 2: diagnosis.DiagnosisDataSource
	(*DiagnosisDataSourceForUpsert)(nil),    // 3: diagnosis.DiagnosisDataSourceForUpsert
	(*RelDiagnosisDataSource)(nil),          // 4: diagnosis.RelDiagnosisDataSource
	(*RelDiagnosisDataSourceForUpsert)(nil), // 5: diagnosis.RelDiagnosisDataSourceForUpsert
}
var file_entities_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entities_proto_init() }
func file_entities_proto_init() {
	if File_entities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnosis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosisForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosisDataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosisDataSourceForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelDiagnosisDataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelDiagnosisDataSourceForUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entities_proto_goTypes,
		DependencyIndexes: file_entities_proto_depIdxs,
		MessageInfos:      file_entities_proto_msgTypes,
	}.Build()
	File_entities_proto = out.File
	file_entities_proto_rawDesc = nil
	file_entities_proto_goTypes = nil
	file_entities_proto_depIdxs = nil
}
