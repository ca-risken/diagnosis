version: 0.2

env:
  variables:
    IMAGE_DIAGNOSIS: "diagnosis/diagnosis"
    IMAGE_JIRA: "diagnosis/jira"
    IMAGE_WPSCAN: "diagnosis/wpscan"
    IMAGE_PORTSCAN: "diagnosis/portscan"
  parameter-store:
    GITHUB_USER: "/build/GITHUB_USER"
    GITHUB_TOKEN: "/build/GITHUB_TOKEN"

phases:
  install:
    runtime-versions:
      golang: 1.14
    commands:
      - echo "machine github.com" > ~/.netrc
      - echo "login ${GITHUB_USER}" >> ~/.netrc
      - echo "password ${GITHUB_TOKEN}" >> ~/.netrc
  pre_build:
    commands:
      - echo Setting environment variables
      - SRC=${CODEBUILD_SRC_DIR}/cmd
      - BUILD_OPT="--no-cache --pull"
      - TAG=v0.0.${CODEBUILD_BUILD_NUMBER}
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - REGISTORY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
  build:
    commands:
      - echo Build gateway started on `date`
      - echo Pushing the Docker images...
      - cd ${SRC}/diagnosis        && docker build ${BUILD_OPT} --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} -t ${IMAGE_DIAGNOSIS}:${TAG} .
      - cd ${SRC}/jira && docker build ${BUILD_OPT} --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} -t ${IMAGE_JIRA}:${TAG} .
      - cd ${SRC}/wpscan && docker build ${BUILD_OPT} --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} -t ${IMAGE_WPSCAN}:${TAG} .
      - cd ${SRC}/portscan && docker build ${BUILD_OPT} --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} -t ${IMAGE_PORTSCAN}:${TAG} .
